name: 'Docker build (using buildx)'
description: |
  Use the docker GHA to tag and build one docker image for multi platform support.
  Apply various open container labels to ensure we can identity the origin of the image.

inputs:
  docker-file-name:
    description: 'Docker file name'
    required: false
    default: 'Dockerfile'
  docker-registry:
    description: 'The Docker registry hostname for tagging the image with'
    required: false
    default: '229494932364.dkr.ecr.eu-west-1.amazonaws.com'
  docker-image-namespace:
    description: 'Vendor namespace for docker image name. Must contain trailing slash ("/").'
    required: false
    default: 'monta/'
  docker-image-name:
    description: 'Name of the docker image to build, without namespace. For example "solar".'
    required: true
  platforms:
    description: 'Docker buildx platforms to target. Comma separated list without spaces.'
    required: false
    default: 'linux/amd64,linux/arm64'
outputs:
  docker-image:
    description: 'Comma separated list of fully qualified docker manifest for the image(s).'
    value: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}

runs:
  using: composite
  steps:
    - name: 'Set up QEMU'
      uses: docker/setup-qemu-action@v3

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3
      # For now, the local "load" does not support multiple platforms (manifests).
      # with:
      #   platforms: 'arm64'

    # Ensure we tag our images with the various org.opencontainers.image.* labels.
    - name: 'Docker prepare metadata and tags/labels'
      id: docker-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.docker-registry }}/${{ inputs.docker-image-namespace }}${{ inputs.docker-image-name }}
        tags: |
          type=sha,format=long,prefix=,suffix=-${{ runner.arch }}
        flavor: |
          latest=false
          prefix=
          suffix=
      # For now, the local "load" does not support multiple platforms (manifests).
      # env:
      #   DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

    - name: 'Docker Build'
      id: docker-build
      uses: docker/build-push-action@v6
      with:
        # For now, the local "load" does not support multiple platforms (manifests).
        # platforms: ${{ inputs.platforms }}
        context: .
        file: ./${{ inputs.docker-file-name }}
        push: false
        # Load the build images into the local docker, so other jobs can refer to them.
        load: true
        no-cache: true
        # For pruning built image on self-hosted runner based on this run's ID
        labels: |
          GITHUB_RUN_ID=${{ github.run_id }}
          ${{ steps.docker-meta.outputs.labels }}
        tags: ${{ steps.docker-meta.outputs.tags }}

    - name: 'Docker inspect'
      shell: bash
      run: |
        docker image inspect ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
