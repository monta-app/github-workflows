name: Deploy

on:
  workflow_call:
    inputs:
      runner-size:
        required: false
        type: string
        description: 'Runner size for the test job'
      stage:
        required: true
        type: string
        description: 'Environment stage (e.g. dev, staging, production)'
      service-name:
        required: true
        type: string
        description: 'Proper name for your service i.e Cloud Emulator'
      service-emoji:
        required: true
        type: string
        description: 'An emoji to identify your service by :)'
      service-identifier:
        required: true
        type: string
        description: 'Identifier of the service being released i.e ocpp-cloud-emulator'
      gradle-module:
        required: true
        type: string
        description: 'Name of the Gradle module being tested'
      java-version:
        required: false
        type: string
        default: "21"
        description: 'Java version to use'
      region:
        required: false
        type: string
        default: "eu-west-1"
        description: 'AWS region to deploy to'
      docker-file-name:
        required: true
        type: string
        description: 'Dockerfile path'
      additional-build-args:
        required: false
        type: string
        description: 'Additional build arguments for Docker'
      ecr-repository-name:
        required: false
        type: string
        description: 'ECR repository name override'
    secrets:
      GHL_USERNAME:
        required: true
        description: 'GitHub username for Gradle plugin'
      GHL_PASSWORD:
        required: true
        description: 'GitHub password/token for Gradle plugin'
      AWS_ACCOUNT_ID:
        required: true
        description: 'AWS Account ID for ECR and deployment access'
      SLACK_APP_TOKEN:
        required: true
        description: 'Slack app-level token for workflow notifications'
      MANIFEST_REPO_PAT:
        required: true
        description: 'GitHub PAT to commit/push to kube-manifests repo'
      SENTRY_AUTH_TOKEN:
        required: false
        description: 'Sentry auth token, passed as Docker build secret'
      AWS_CDN_ACCESS_KEY_ID:
        required: false
        description: 'CDN access key ID for S3 access, injected into Docker image'
      AWS_CDN_SECRET_ACCESS_KEY:
        required: false
        description: 'CDN secret access key for S3 access, injected into Docker image'

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  test:
    name: Test
    uses: monta-app/github-workflows/.github/workflows/component-test-kotlin.yaml@v3
    with:
      runner-size: ${{ inputs.runner-size }}
      service-name: ${{ inputs.service-name }}
      service-emoji: ${{ inputs.service-emoji }}
      gradle-module: ${{ inputs.gradle-module }}
      java-version: ${{ inputs.java-version }}
    secrets:
      GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
      GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
      SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}

  build:
    name: Build
    needs: test
    uses: monta-app/github-workflows/.github/workflows/component-build.yaml@v3
    with:
      service-name: ${{ inputs.service-name }}
      service-emoji: ${{ inputs.service-emoji }}
      service-identifier: ${{ inputs.service-identifier }}
      region: ${{ inputs.region }}
      docker-file-name: ${{ inputs.docker-file-name }}
      additional-build-args: ${{ inputs.additional-build-args }}
      ecr-repository-name: ${{ inputs.ecr-repository-name }}
      slack-message-id: ${{ needs.test.outputs.slack-message-id }}
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
      GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
      GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      AWS_CDN_ACCESS_KEY_ID: ${{ secrets.AWS_CDN_ACCESS_KEY_ID }}
      AWS_CDN_SECRET_ACCESS_KEY: ${{ secrets.AWS_CDN_SECRET_ACCESS_KEY }}

  deploy:
    name: Deploy
    needs: build
    uses: monta-app/github-workflows/.github/workflows/component-deploy.yaml@v3
    with:
      service-name: ${{ inputs.service-name }}
      service-emoji: ${{ inputs.service-emoji }}
      service-identifier: ${{ inputs.service-identifier }}
      stage: ${{ inputs.stage }}
      image-tag: ${{ needs.build.outputs.image-tag }}
      slack-message-id: ${{ needs.build.outputs.slack-message-id }}
    secrets:
      MANIFEST_REPO_PAT: ${{ secrets.MANIFEST_REPO_PAT }}
      SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
