name: Code Coverage (Kotlin)
on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
        description: "The name of the project that will appear in the reporting, must be in kebab-case format"
      runner-size:
        required: false
        type: string
        description: "Runner to use for the job (normal, or large)"
        default: "normal"
      java-version:
        required: false
        type: string
        description: "Java version to use"
        default: "21"
      gradle-module:
        required: false
        type: string
        description: "Name of the gradle module being tested - only needed if you want to test one module in a multi-module project"
      kover-report-path:
        required: false
        type: string
        description: "Path to the Kover report XML file"
        default: "build/reports/kover/report.xml"
      catalog-info-path:
        required: false
        type: string
        description: "Path to the catalog-info.yml file"
        default: "catalog-info.yml"
      cloc-source-path:
        required: false
        type: string
        description: 'Path to analyze for total lines of code counting (defaults to current directory)'
        default: '.'
      cloc-exclude-dirs:
        required: false
        type: string
        description: 'Comma-separated list of directories to exclude from LOC count when analyzing subdirectories'
        default: 'build,target,dist,node_modules,.gradle,.idea,out'
      team-override:
        required: false
        type: string
        description: 'Optional override for the team name. If provided, this value will be used instead of reading from catalog-info.yml'
      division-override:
        required: false
        type: string
        description: 'Optional override for the division name. If provided, this value will be used instead of reading from catalog-info.yml'
      test-timeout-minutes:
        required: false
        type: number
        description: "Timeout for the test job in minutes"
        default: 30
    secrets:
      TAILSCALE_AUTHKEY:
        required: true
        description: "Authentication token used for logging into Tailscale"
      GHL_USERNAME:
        required: true
        description: "Github Username (Gradle plugin)"
      GHL_PASSWORD:
        required: true
        description: "Github Password (Gradle plugin)"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      runner-name: ${{ steps.runner.outputs.runner-name }}
    steps:
      - name: Get runner name
        id: runner
        uses: monta-app/github-workflows/.github/actions/runner-size-converter@main
        with:
          runner-size: ${{ inputs.runner-size }}
  generate-coverage-report:
    needs:
      - setup
    runs-on: ${{ needs.setup.outputs.runner-name }}
    timeout-minutes: ${{ inputs.test-timeout-minutes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Validate service-name format
        run: |
          if ! echo "${{ inputs.service-name }}" | grep -qE '^[a-z0-9]+(-[a-z0-9]+)*$'; then
            echo "Error: service-name '${{ inputs.service-name }}' is not in kebab-case format"
            echo "Expected format: lowercase letters and numbers separated by hyphens (e.g., 'my-service-name')"
            exit 1
          fi
          echo "âœ“ service-name '${{ inputs.service-name }}' is valid"
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: "corretto"
          cache: "gradle"
      - name: Run tests with Kover
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        uses: monta-app/github-workflows/.github/actions/gradle-multi-module@main
        with:
          gradle-module: ${{ inputs.gradle-module }}
          gradle-tasks: "test koverXmlReport"
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ inputs.kover-report-path }}
          retention-days: 1
  push-coverage-to-server:
    needs:
      - setup
      - generate-coverage-report
    runs-on: linux-x64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check if can access Dev Lens
        run: |
          curl --retry 3 --retry-delay 5 --retry-all-errors -f -s -o /dev/null --max-time 30 https://dev-lens.staging.monta.app/health
      - name: Download coverage report
        id: download-coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: Set coverage report path
        id: coverage-path
        run: |
          filename=$(basename "${{ inputs.kover-report-path }}")
          echo "report-path=${{ steps.download-coverage.outputs.download-path }}/$filename" >> $GITHUB_OUTPUT
      - name: Disable man-db trigger refreshes (https://github.com/actions/runner-images/issues/10977)
        run: |
          echo 'set man-db/auto-update false' | sudo debconf-communicate >/dev/null
          sudo dpkg-reconfigure man-db
      - name: Install cloc
        run: |
          sudo apt-get install -y cloc
      - name: Push coverage to Dev Lens
        uses: monta-app/push-kover-prometheus-action@main
        with:
          endpoint-url: "https://dev-lens.staging.monta.app/api/v1/code-coverage/metrics"
          kover-report-path: ${{ steps.coverage-path.outputs.report-path }}
          catalog-info-path: ${{ inputs.catalog-info-path }}
          service-name: ${{ inputs.service-name }}
          cloc-source-path: ${{ inputs.cloc-source-path }}
          cloc-exclude-dirs: ${{ inputs.cloc-exclude-dirs }}
          team-override: ${{ inputs.team-override }}
          division-override: ${{ inputs.division-override }}
