name: Sonar Cloud Analysis
on:
  workflow_call:
    inputs:
      runner-size:
        required: false
        description: "Runner to use for the job"
        default: "normal"
        type: choice
        options:
          - "normal"
          - "large"
      java-distribution:
        required: false
        type: string
        default: 'corretto'
      java-version:
        required: false
        type: string
        default: '21'
    secrets:
      GHL_USERNAME:
        required: true
        description: "Github Username (Gradle plugin)"
      GHL_PASSWORD:
        required: true
        description: "Github Password (Gradle plugin)"
      SONAR_TOKEN:
        required: true
        description: "Sonar token (Optional, won't publish to sonar if not present)"
jobs:
  get-runner:
    uses: ./.github/workflows/components/runner-size-converter.yaml
    with:
      runner-size: ${{ inputs.runner-size }}
  sonar-cloud:
    name: Sonar Cloud Analysis
    needs: get-runner
    runs-on: ${{ needs.get-runner.outputs.runner-name }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: 'gradle'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Inspect gradle tasks
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
        run: |
          COVERAGE_TASK=$(./gradlew :tasks | grep -Eo '(koverXmlReport|jacocoTestReport)' | head -n1)
          echo "COVERAGE_TASK=${COVERAGE_TASK}" >> "$GITHUB_ENV"
      - name: Build and analyze
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew check $COVERAGE_TASK sonar
