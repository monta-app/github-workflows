name: Build and test (Jacoco)
on:
  workflow_call:
    inputs:
      action-runner:
        required: false
        type: string
        description: "Runner to use for the job"
        default: 'ubuntu-latest'
      java-distribution:
        required: false
        type: string
        default: 'corretto'
      java-version:
        required: false
        type: string
        default: '17'
      gradle-module:
        required: false
        type: string
        description: "Name of the gradle module being tested - only needed if you want to test one module in a multi-module project"
      gradle-parallel-tests:
        required: false
        type: boolean
        default: true
        description: "Run gradle tests in parallel"
      sonarcloud:
        required: false
        type: boolean
        default: false
        description: "Upload report to SonarCloud (SONAR_TOKEN must be set)"
    secrets:
      GHL_USERNAME:
        required: true
        description: "Github Username (Gradle plugin)"
      GHL_PASSWORD:
        required: true
        description: "Github Password (Gradle plugin)"
      SONAR_TOKEN:
        required: false
        description: "SonarCloud token"
jobs:
  pr_title_checker:
    name: Check PR title
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: Slashgear/action-check-pr-title@v4
        with:
          regexp: '^(\[(develop|development|staging)\]\s)?(build|chore|ci|docs|feat|feature|fix|perf|refactor|revert|style|test|release|ignore)(\([\w\- ]+\))?!?: (.+)'
          helpMessage: "Example: 'feat(app-api): Add new vehicle integration (SERVER-123)'"
  test:
    name: Test with code coverage
    runs-on: ${{ inputs.action-runner }}
    timeout-minutes: 30
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # to check out the actual pull request commit, not the merge commit
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      # Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: 'gradle'
      # Cache SonarCloud packages
      - name: Cache SonarCloud packages
        if: inputs.sonarcloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      # Run tests with coverage
      - name: Run tests with coverage
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # set the gradle tasks respecting any gradle-module used as input
        run: ./gradlew --no-daemon ${{ format('{0}:ktlintCheck {0}:test', inputs.gradle-module) }} ${{ inputs.gradle-parallel-tests && '--parallel' || ''}}
        shell: bash
      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-result
          path: |
            **/reports/tests/test
            /home/runner/.gradle/daemon/**/daemon-*.out.log
          retention-days: 2
          overwrite: true
      # Upload results to SonarCloud
      - name: Upload results to SonarCloud
        if: inputs.sonarcloud
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew --no-daemon sonar
      # Add code coverage to PR
      - name: Add code coverage to PR
        uses: madrapps/jacoco-report@v1.6.1
        with:
          title: Code Coverage ${{ inputs.gradle-module }}
          paths: ${{ github.workspace }}/**/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70
          update-comment: true
      # Publish test results
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml
            **/build/test-results/**/*.trx
            **/build/test-results/**/*.json
