name: Build and test (Kotlin)
on:
  workflow_call:
    inputs:
      runner-size:
        required: false
        type: string
        description: "Runner to use for the job (normal, or large)"
        default: "normal"
      java-version:
        required: false
        type: string
        default: '21'
      gradle-module:
        required: false
        type: string
        description: "Name of the gradle module being tested - only needed if you want to test one module in a multi-module project"
      kover-report-path:
        required: false
        type: string
        description: "Path to the Kover report XML file for code coverage (relative to workspace or absolute)"
        default: 'build/reports/kover/report.xml'
      test-timeout-minutes:
        required: false
        type: number
        description: "Timeout for the test job in minutes"
        default: 30
      skip-sonar:
        required: false
        type: boolean
        description: "Allow you to skip using Sonar Cloud, only to be used for common modules"
        default: false
      gradle-args:
        required: false
        type: string
        default: "--no-daemon --parallel"
        description: 'Additional Gradle arguments'
    secrets:
      GHL_USERNAME:
        required: true
        description: "Github Username (Gradle plugin)"
      GHL_PASSWORD:
        required: true
        description: "Github Password (Gradle plugin)"
      SONAR_TOKEN:
        required: true
        description: "SonarCloud token"
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      runner-name: ${{ steps.runner.outputs.runner-name }}
    steps:
      - name: Check PR title
        uses: monta-app/github-workflows/.github/actions/pr-title-check@main
      - name: Get runner name
        id: runner
        uses: monta-app/github-workflows/.github/actions/runner-size-converter@main
        with:
          runner-size: ${{ inputs.runner-size }}
  test:
    name: Test with code coverage
    needs: setup
    runs-on: ${{ needs.setup.outputs.runner-name }}
    timeout-minutes: ${{ inputs.test-timeout-minutes }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # to check out the actual pull request commit, not the merge commit
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: ${{ inputs.java-version }}
          cache: 'gradle'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: ${{ !inputs.skip-sonar }}
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Run linter
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: monta-app/github-workflows/.github/actions/gradle-multi-module@main
        with:
          gradle-module: ${{ inputs.gradle-module }}
          gradle-tasks: 'ktlintCheck'
          gradle-args: ${{ inputs.gradle-args }}
      - name: Run tests with coverage
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: monta-app/github-workflows/.github/actions/gradle-multi-module@main
        with:
          gradle-module: ${{ inputs.gradle-module }}
          gradle-tasks: 'test koverXmlReport koverHtmlReport'
          gradle-args: ${{ inputs.gradle-args }}
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.gradle-module || 'test-result' }}
          path: |
            ${{ github.workspace }}/build/reports/kover
            **/reports/tests/test
            /home/runner/.gradle/daemon/**/daemon-*.out.log
          retention-days: 2
          overwrite: true
      - name: Upload results to SonarCloud
        if: ${{ !inputs.skip-sonar }}
        env:
          GHL_USERNAME: ${{ secrets.GHL_USERNAME }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        uses: monta-app/github-workflows/.github/actions/gradle-multi-module@main
        with:
          gradle-module: ${{ inputs.gradle-module }}
          gradle-tasks: 'sonar'
          gradle-args: ${{ inputs.gradle-args }}
      - name: Add code coverage to PR
        uses: mi-kas/kover-report@v1
        with:
          title: Code Coverage ${{ inputs.gradle-module }}
          path: ${{ inputs.kover-report-path }}
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70
          update-comment: true
          coverage-counter-type: LINE
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml
            **/build/test-results/**/*.trx
            **/build/test-results/**/*.json
