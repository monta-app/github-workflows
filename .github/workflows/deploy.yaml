name: Deploy
on:
  workflow_call:
    inputs:
      service-name:
        required: false
        type: string
        description: 'Proper name for your service i.e OCPP Service, Vehicle Service'
      service-emoji:
        required: false
        type: string
        description: 'An emoji to identify your service by :)'
      service-identifier:
        required: true
        type: string
        description: 'Identifier of the service being released i.e ocpp, vehicle, server, wallet.'
      stage:
        required: true
        type: string
        description: 'stage being released (dev,staging,production)'
      image-tag:
        required: true
        type: string
        description: 'Docker image tag to deploy'
      slack-message-id:
        required: false
        type: string
        description: 'Existing Slack message ID to update'
    secrets:
      MANIFEST_REPO_PAT:
        required: true
        description: 'GitHub personal access token'
      SLACK_APP_TOKEN:
        required: true
        description: 'Slack app token'
    outputs:
      slack-message-id:
        description: 'Slack message ID for subsequent updates'
        value: ${{ jobs.deploy.outputs.slack-message-id }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      slack-message-id: ${{ steps.publish-slack.outputs.slack-message-id || inputs.slack-message-id }}
    steps:
      - name: Publish initial message to slack (if no message ID provided)
        if: ${{ inputs.slack-message-id == '' }}
        uses: monta-app/slack-notifier-cli-action@main
        id: publish-slack
        with:
          job-type: "deploy"
          job-status: "progress"
          service-name: ${{ inputs.service-name }}
          service-emoji: ${{ inputs.service-emoji }}
          slack-app-token: ${{ secrets.SLACK_APP_TOKEN }}
          slack-channel-id: "C01KL9FUPNK"
      - name: Update existing slack message
        if: ${{ inputs.slack-message-id != '' }}
        uses: monta-app/slack-notifier-cli-action@main
        with:
          job-type: "deploy"
          job-status: "progress"
          service-name: ${{ inputs.service-name }}
          service-emoji: ${{ inputs.service-emoji }}
          slack-app-token: ${{ secrets.SLACK_APP_TOKEN }}
          slack-channel-id: "C01KL9FUPNK"
          slack-message-id: ${{ inputs.slack-message-id }}
      - name: Check out manifest repository
        uses: actions/checkout@v4
        with:
          repository: monta-app/kube-manifests
          path: 'manifests'
          token: ${{ secrets.MANIFEST_REPO_PAT }}
      - name: Update image tag
        shell: bash
        working-directory: ./manifests/apps/${{ inputs.service-identifier }}/${{ inputs.stage }}/app
        run: |
          sed -i "s/tag: .*/tag: ${{ inputs.image-tag }}/" values.yaml
          sed -i "s/revision: .*/revision: \"${GITHUB_SHA::8}\"/" values.yaml
          sed -i "s/build: .*/build: ${{ github.run_number }}/" values.yaml
      - name: Update config
        shell: bash
        working-directory: ./manifests/apps/${{ inputs.service-identifier }}/${{ inputs.stage }}/cluster
        run: |
          # Update previousHash
          previousHash=$(yq e .currentHash config.yaml) yq e '.previousHash = strenv(previousHash)' -i config.yaml
          # Update currentHash
          currentHash=${GITHUB_SHA::8} yq e '.currentHash = strenv(currentHash)' -i config.yaml
      - name: Commit to manifest repository
        working-directory: './manifests'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bump docker tag for ${{ inputs.service-identifier }} on ${{ inputs.stage }}"
        shell: bash
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MANIFEST_REPO_PAT }}
          directory: './manifests'
          repository: monta-app/kube-manifests
      - name: Publish result message to slack
        if: always()
        uses: monta-app/slack-notifier-cli-action@main
        with:
          job-type: "deploy"
          job-status: ${{ job.status }}
          service-name: ${{ inputs.service-name }}
          service-emoji: ${{ inputs.service-emoji }}
          slack-app-token: ${{ secrets.SLACK_APP_TOKEN }}
          slack-channel-id: "C01KL9FUPNK"
          slack-message-id: ${{ steps.publish-slack.outputs.slack-message-id || inputs.slack-message-id }}
